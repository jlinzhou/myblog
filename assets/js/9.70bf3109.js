(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{400:function(t,n,e){"use strict";e.r(n);var s=e(24),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("cin.get的参数和cin.getline相同，但是getline会读取换行符并保存到第一个参数中，但是cin.get会将换行符留在输入队列中，所以会导致下一个读取的内容是换行符\ncin.getline不适用于string类")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("getline(cin, name);\ncin.get(name,128);\ncin.getline (name,128);\ncin>>name;\n")])])]),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ST_PIZZA_INFO *pizza_info = new ST_PIZZA_INFO;\ndelete pizza_info;\n")])])]),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('// pracitce 4\nvoid p4_4(void)\n{\n\tstring first_name;\n\tstring last_name;\n\n\tcout << "Enter your first name: ";\n\t//  cin.getline()  // cin.getline不适用于string类\n\tgetline(cin, first_name);\n\n\tcout << "Enter your last name: ";\n\tgetline(cin, last_name);\n\n\tcout << "Here\'s your infomation is a single string: " << last_name << ", " << first_name << endl;\n}\n')])])]),e("p",[t._v("删除重复数据")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('fstream f("C:\\\\Users\\\\Entropy\\\\Desktop\\\\新建文件夹 (2)\\\\数据.txt");\n\tvector<string> words; \n\tstring line; \n\twhile(getline(f,line))//会自动把\\n换行符去掉 \n\t{\n\t\tint pos = line.find(",");\n\t\tstring usrName = line.substr(0, pos);\n\t\twords.push_back(usrName);\n\t\t//cout << usrName << endl;\n\n\t} \n\tcout << "共有单词数目:" << words.size() << endl;\n\n\t\t// vector<int>::iterator 这个是定义了个迭代器\n\tvector<string>::iterator it;\n\t// 先对数据进行排序（必须的）\n\tsort(words.begin(), words.end());\n\t// unique()函数就是去重用的\n\t// 去重原理：找到重复的数据后移动到最后，然后返回第一个重复的元素的地址\n\tit = unique(words.begin(), words.end());\n\t// 删掉重复的元素\n\twords.erase(it, words.end());\n\tint j=0;\n\tfor (it = words.begin(); it != words.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t\tj++;\n\t}\n\tcout << j<<endl;\n')])])]),e("p",[t._v("按行读取数据")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\tifstream ifs;\n\tifs.open("C:\\\\Users\\\\Entropy\\\\Desktop\\\\新建文件夹 (2)\\\\无行情合约.txt", ios::in);\n\tif (!ifs.is_open())\n\t{\n\t\tcout << "打开失败" << endl;\n\t}\n\tchar buf[1024];\n\n\twhile (ifs >>buf) //按行读取\n\t{\n\t\tcout << buf << endl;\n\t}\n\tifs.close();\n')])])]),e("p",[t._v("写入数据")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('ofstream ofs;\n\tofs.open("./test.txt", ios::out | ios::trunc);\n\t//判断是否打开成功\n\tif ( !ofs.is_open())\n\t{\n\t\tcout << "打开失败" << endl;\n\t}\n\n\tofs << "姓名：abc" << endl;\n\tofs << "年龄：100" << endl;\n\tofs << "性别：男" << endl;\n\n\n\tofs.close();\n')])])]),e("p",[t._v("捕获异常")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\ttry \n\t{\n\t\tthrow 1;\n\t}\n\tcatch (...)\n\t{\n\t\tcout << "int类型异常捕获" << endl;\n\t}\n\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);